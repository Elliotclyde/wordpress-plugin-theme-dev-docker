services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    ports:
      - "3306:3306"
    networks:
      - app-network
  wordpress:
    depends_on:
      - db
    image: wordpress:php8.4-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
      - type: bind
        source: ./plugins
        target: /var/www/html/wp-content/plugins
      - type: bind
        source: ./themes
        target: /var/www/html/wp-content/themes
      - type: bind
        source: ./php/docker-conf.ini
        target: /usr/local/etc/php/conf.d/docker-conf.ini
    networks:
      - app-network
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - wordpress:/var/www/html
      - type: bind
        source: ./plugins
        target: /var/www/html/wp-content/plugins
      - type: bind
        source: ./themes
        target: /var/www/html/wp-content/themes
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - app-network
  # Probably not a good idea to run phpmyadmin in production
  # but if you want to, uncomment the following lines
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   restart: unless-stopped
  #   environment:
  #     - PMA_USER=$MYSQL_USER
  #     - PMA_PASSWORD=$MYSQL_PASSWORD
  #     - PMA_HOST=db:3306
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - app-network
volumes:
  wordpress:
  dbdata:
networks:
  app-network:
    driver: bridge
